//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERezeptClientSimpleExample.CardService {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/tel/error/v2.0")]
    public partial class Error : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageIDField;
        
        private System.DateTime timestampField;
        
        private ErrorTrace[] traceField;
        
        public Error() {
            this.messageIDField = "";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
                this.RaisePropertyChanged("MessageID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Trace", Order=2)]
        public ErrorTrace[] Trace {
            get {
                return this.traceField;
            }
            set {
                this.traceField = value;
                this.RaisePropertyChanged("Trace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/tel/error/v2.0")]
    public partial class ErrorTrace : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string eventIDField;
        
        private string instanceField;
        
        private string logReferenceField;
        
        private string compTypeField;
        
        private string codeField;
        
        private string severityField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private ErrorTraceDetail detailField;
        
        public ErrorTrace() {
            this.eventIDField = "";
            this.instanceField = "";
            this.logReferenceField = "";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
                this.RaisePropertyChanged("EventID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Instance {
            get {
                return this.instanceField;
            }
            set {
                this.instanceField = value;
                this.RaisePropertyChanged("Instance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LogReference {
            get {
                return this.logReferenceField;
            }
            set {
                this.logReferenceField = value;
                this.RaisePropertyChanged("LogReference");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CompType {
            get {
                return this.compTypeField;
            }
            set {
                this.compTypeField = value;
                this.RaisePropertyChanged("CompType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=4)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
                this.RaisePropertyChanged("Severity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
                this.RaisePropertyChanged("ErrorType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
                this.RaisePropertyChanged("ErrorText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public ErrorTraceDetail Detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
                this.RaisePropertyChanged("Detail");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/tel/error/v2.0")]
    public partial class ErrorTraceDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string encodingField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
                this.RaisePropertyChanged("Encoding");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0")]
    public partial class PinResponseType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private PinResultEnum pinResultField;
        
        private string leftTriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PinResultEnum PinResult {
            get {
                return this.pinResultField;
            }
            set {
                this.pinResultField = value;
                this.RaisePropertyChanged("PinResult");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger", Order=2)]
        public string LeftTries {
            get {
                return this.leftTriesField;
            }
            set {
                this.leftTriesField = value;
                this.RaisePropertyChanged("LeftTries");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public partial class Status : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Result resultField;
        
        private Error errorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Result Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/tel/error/v2.0", Order=1)]
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public enum Result {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        Warning,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0")]
    public enum PinResultEnum {
        
        /// <remarks/>
        ERROR,
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        REJECTED,
        
        /// <remarks/>
        WASBLOCKED,
        
        /// <remarks/>
        NOWBLOCKED,
        
        /// <remarks/>
        TRANSPORT_PIN,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0")]
    public partial class ContextType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string mandantIdField;
        
        private string clientSystemIdField;
        
        private string workplaceIdField;
        
        private string userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public string MandantId {
            get {
                return this.mandantIdField;
            }
            set {
                this.mandantIdField = value;
                this.RaisePropertyChanged("MandantId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=1)]
        public string ClientSystemId {
            get {
                return this.clientSystemIdField;
            }
            set {
                this.clientSystemIdField = value;
                this.RaisePropertyChanged("ClientSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=2)]
        public string WorkplaceId {
            get {
                return this.workplaceIdField;
            }
            set {
                this.workplaceIdField = value;
                this.RaisePropertyChanged("WorkplaceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=3)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.gematik.de/conn/CardService/WSDL/v8.1", ConfigurationName="CardService.CardServicePortType")]
    public interface CardServicePortType {
        
        // CODEGEN: Generating message contract since the operation VerifyPin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#VerifyPin", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.CardService.Error), Action="http://ws.gematik.de/conn/CardService/v8.1#VerifyPin", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.CardService.VerifyPinResponse VerifyPin(ERezeptClientSimpleExample.CardService.VerifyPinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#VerifyPin", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.VerifyPinResponse> VerifyPinAsync(ERezeptClientSimpleExample.CardService.VerifyPinRequest request);
        
        // CODEGEN: Generating message contract since the operation ChangePin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#ChangePin", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.CardService.Error), Action="http://ws.gematik.de/conn/CardService/v8.1#ChangePin", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.CardService.ChangePinResponse ChangePin(ERezeptClientSimpleExample.CardService.ChangePinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#ChangePin", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.ChangePinResponse> ChangePinAsync(ERezeptClientSimpleExample.CardService.ChangePinRequest request);
        
        // CODEGEN: Generating message contract since the operation UnblockPin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#UnblockPin", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.CardService.Error), Action="http://ws.gematik.de/conn/CardService/v8.1#UnblockPin", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.CardService.UnblockPinResponse UnblockPin(ERezeptClientSimpleExample.CardService.UnblockPinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#UnblockPin", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.UnblockPinResponse> UnblockPinAsync(ERezeptClientSimpleExample.CardService.UnblockPinRequest request);
        
        // CODEGEN: Generating message contract since the operation GetPinStatus is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#GetPinStatus", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.CardService.Error), Action="http://ws.gematik.de/conn/CardService/v8.1#GetPinStatus", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.CardService.GetPinStatusResponse1 GetPinStatus(ERezeptClientSimpleExample.CardService.GetPinStatusRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#GetPinStatus", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.GetPinStatusResponse1> GetPinStatusAsync(ERezeptClientSimpleExample.CardService.GetPinStatusRequest request);
        
        // CODEGEN: Generating message contract since the operation EnablePin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#EnablePin", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.CardService.Error), Action="http://ws.gematik.de/conn/CardService/v8.1#EnablePin", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.CardService.EnablePinResponse EnablePin(ERezeptClientSimpleExample.CardService.EnablePinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#EnablePin", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.EnablePinResponse> EnablePinAsync(ERezeptClientSimpleExample.CardService.EnablePinRequest request);
        
        // CODEGEN: Generating message contract since the operation DisablePin is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#DisablePin", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.CardService.Error), Action="http://ws.gematik.de/conn/CardService/v8.1#DisablePin", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.CardService.DisablePinResponse DisablePin(ERezeptClientSimpleExample.CardService.DisablePinRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/CardService/v8.1#DisablePin", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.DisablePinResponse> DisablePinAsync(ERezeptClientSimpleExample.CardService.DisablePinRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class VerifyPin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string cardHandleField;
        
        private string pinTypField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=1)]
        public string CardHandle {
            get {
                return this.cardHandleField;
            }
            set {
                this.cardHandleField = value;
                this.RaisePropertyChanged("CardHandle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=2)]
        public string PinTyp {
            get {
                return this.pinTypField;
            }
            set {
                this.pinTypField = value;
                this.RaisePropertyChanged("PinTyp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class VerifyPinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.VerifyPin VerifyPin;
        
        public VerifyPinRequest() {
        }
        
        public VerifyPinRequest(ERezeptClientSimpleExample.CardService.VerifyPin VerifyPin) {
            this.VerifyPin = VerifyPin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class VerifyPinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="VerifyPinResponse", Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.PinResponseType VerifyPinResponse1;
        
        public VerifyPinResponse() {
        }
        
        public VerifyPinResponse(ERezeptClientSimpleExample.CardService.PinResponseType VerifyPinResponse1) {
            this.VerifyPinResponse1 = VerifyPinResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class ChangePin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string cardHandleField;
        
        private string pinTypField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=1)]
        public string CardHandle {
            get {
                return this.cardHandleField;
            }
            set {
                this.cardHandleField = value;
                this.RaisePropertyChanged("CardHandle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=2)]
        public string PinTyp {
            get {
                return this.pinTypField;
            }
            set {
                this.pinTypField = value;
                this.RaisePropertyChanged("PinTyp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.ChangePin ChangePin;
        
        public ChangePinRequest() {
        }
        
        public ChangePinRequest(ERezeptClientSimpleExample.CardService.ChangePin ChangePin) {
            this.ChangePin = ChangePin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class ChangePinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="ChangePinResponse", Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.PinResponseType ChangePinResponse1;
        
        public ChangePinResponse() {
        }
        
        public ChangePinResponse(ERezeptClientSimpleExample.CardService.PinResponseType ChangePinResponse1) {
            this.ChangePinResponse1 = ChangePinResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class UnblockPin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string cardHandleField;
        
        private string pinTypField;
        
        private bool setNewPinField;
        
        private bool setNewPinFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=1)]
        public string CardHandle {
            get {
                return this.cardHandleField;
            }
            set {
                this.cardHandleField = value;
                this.RaisePropertyChanged("CardHandle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=2)]
        public string PinTyp {
            get {
                return this.pinTypField;
            }
            set {
                this.pinTypField = value;
                this.RaisePropertyChanged("PinTyp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool SetNewPin {
            get {
                return this.setNewPinField;
            }
            set {
                this.setNewPinField = value;
                this.RaisePropertyChanged("SetNewPin");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool SetNewPinSpecified {
            get {
                return this.setNewPinFieldSpecified;
            }
            set {
                this.setNewPinFieldSpecified = value;
                this.RaisePropertyChanged("SetNewPinSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnblockPinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.UnblockPin UnblockPin;
        
        public UnblockPinRequest() {
        }
        
        public UnblockPinRequest(ERezeptClientSimpleExample.CardService.UnblockPin UnblockPin) {
            this.UnblockPin = UnblockPin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnblockPinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="UnblockPinResponse", Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.PinResponseType UnblockPinResponse1;
        
        public UnblockPinResponse() {
        }
        
        public UnblockPinResponse(ERezeptClientSimpleExample.CardService.PinResponseType UnblockPinResponse1) {
            this.UnblockPinResponse1 = UnblockPinResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class GetPinStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string cardHandleField;
        
        private string pinTypField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=1)]
        public string CardHandle {
            get {
                return this.cardHandleField;
            }
            set {
                this.cardHandleField = value;
                this.RaisePropertyChanged("CardHandle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=2)]
        public string PinTyp {
            get {
                return this.pinTypField;
            }
            set {
                this.pinTypField = value;
                this.RaisePropertyChanged("PinTyp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class GetPinStatusResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private PinStatusEnum pinStatusField;
        
        private bool pinStatusFieldSpecified;
        
        private string leftTriesField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public PinStatusEnum PinStatus {
            get {
                return this.pinStatusField;
            }
            set {
                this.pinStatusField = value;
                this.RaisePropertyChanged("PinStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool PinStatusSpecified {
            get {
                return this.pinStatusFieldSpecified;
            }
            set {
                this.pinStatusFieldSpecified = value;
                this.RaisePropertyChanged("PinStatusSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger", Order=2)]
        public string LeftTries {
            get {
                return this.leftTriesField;
            }
            set {
                this.leftTriesField = value;
                this.RaisePropertyChanged("LeftTries");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public enum PinStatusEnum {
        
        /// <remarks/>
        VERIFIED,
        
        /// <remarks/>
        TRANSPORT_PIN,
        
        /// <remarks/>
        EMPTY_PIN,
        
        /// <remarks/>
        BLOCKED,
        
        /// <remarks/>
        VERIFIABLE,
        
        /// <remarks/>
        DISABLED,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPinStatusRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.GetPinStatus GetPinStatus;
        
        public GetPinStatusRequest() {
        }
        
        public GetPinStatusRequest(ERezeptClientSimpleExample.CardService.GetPinStatus GetPinStatus) {
            this.GetPinStatus = GetPinStatus;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetPinStatusResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.GetPinStatusResponse GetPinStatusResponse;
        
        public GetPinStatusResponse1() {
        }
        
        public GetPinStatusResponse1(ERezeptClientSimpleExample.CardService.GetPinStatusResponse GetPinStatusResponse) {
            this.GetPinStatusResponse = GetPinStatusResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class EnablePin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string cardHandleField;
        
        private string pinTypField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=1)]
        public string CardHandle {
            get {
                return this.cardHandleField;
            }
            set {
                this.cardHandleField = value;
                this.RaisePropertyChanged("CardHandle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=2)]
        public string PinTyp {
            get {
                return this.pinTypField;
            }
            set {
                this.pinTypField = value;
                this.RaisePropertyChanged("PinTyp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnablePinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.EnablePin EnablePin;
        
        public EnablePinRequest() {
        }
        
        public EnablePinRequest(ERezeptClientSimpleExample.CardService.EnablePin EnablePin) {
            this.EnablePin = EnablePin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class EnablePinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="EnablePinResponse", Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.PinResponseType EnablePinResponse1;
        
        public EnablePinResponse() {
        }
        
        public EnablePinResponse(ERezeptClientSimpleExample.CardService.PinResponseType EnablePinResponse1) {
            this.EnablePinResponse1 = EnablePinResponse1;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class DisablePin : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string cardHandleField;
        
        private string pinTypField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=1)]
        public string CardHandle {
            get {
                return this.cardHandleField;
            }
            set {
                this.cardHandleField = value;
                this.RaisePropertyChanged("CardHandle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=2)]
        public string PinTyp {
            get {
                return this.pinTypField;
            }
            set {
                this.pinTypField = value;
                this.RaisePropertyChanged("PinTyp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DisablePinRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.DisablePin DisablePin;
        
        public DisablePinRequest() {
        }
        
        public DisablePinRequest(ERezeptClientSimpleExample.CardService.DisablePin DisablePin) {
            this.DisablePin = DisablePin;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class DisablePinResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="DisablePinResponse", Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=0)]
        public ERezeptClientSimpleExample.CardService.PinResponseType DisablePinResponse1;
        
        public DisablePinResponse() {
        }
        
        public DisablePinResponse(ERezeptClientSimpleExample.CardService.PinResponseType DisablePinResponse1) {
            this.DisablePinResponse1 = DisablePinResponse1;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CardServicePortTypeChannel : ERezeptClientSimpleExample.CardService.CardServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CardServicePortTypeClient : System.ServiceModel.ClientBase<ERezeptClientSimpleExample.CardService.CardServicePortType>, ERezeptClientSimpleExample.CardService.CardServicePortType {
        
        public CardServicePortTypeClient() {
        }
        
        public CardServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CardServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CardServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.CardService.VerifyPinResponse ERezeptClientSimpleExample.CardService.CardServicePortType.VerifyPin(ERezeptClientSimpleExample.CardService.VerifyPinRequest request) {
            return base.Channel.VerifyPin(request);
        }
        
        public ERezeptClientSimpleExample.CardService.PinResponseType VerifyPin(ERezeptClientSimpleExample.CardService.VerifyPin VerifyPin1) {
            ERezeptClientSimpleExample.CardService.VerifyPinRequest inValue = new ERezeptClientSimpleExample.CardService.VerifyPinRequest();
            inValue.VerifyPin = VerifyPin1;
            ERezeptClientSimpleExample.CardService.VerifyPinResponse retVal = ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).VerifyPin(inValue);
            return retVal.VerifyPinResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.VerifyPinResponse> ERezeptClientSimpleExample.CardService.CardServicePortType.VerifyPinAsync(ERezeptClientSimpleExample.CardService.VerifyPinRequest request) {
            return base.Channel.VerifyPinAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.VerifyPinResponse> VerifyPinAsync(ERezeptClientSimpleExample.CardService.VerifyPin VerifyPin) {
            ERezeptClientSimpleExample.CardService.VerifyPinRequest inValue = new ERezeptClientSimpleExample.CardService.VerifyPinRequest();
            inValue.VerifyPin = VerifyPin;
            return ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).VerifyPinAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.CardService.ChangePinResponse ERezeptClientSimpleExample.CardService.CardServicePortType.ChangePin(ERezeptClientSimpleExample.CardService.ChangePinRequest request) {
            return base.Channel.ChangePin(request);
        }
        
        public ERezeptClientSimpleExample.CardService.PinResponseType ChangePin(ERezeptClientSimpleExample.CardService.ChangePin ChangePin1) {
            ERezeptClientSimpleExample.CardService.ChangePinRequest inValue = new ERezeptClientSimpleExample.CardService.ChangePinRequest();
            inValue.ChangePin = ChangePin1;
            ERezeptClientSimpleExample.CardService.ChangePinResponse retVal = ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).ChangePin(inValue);
            return retVal.ChangePinResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.ChangePinResponse> ERezeptClientSimpleExample.CardService.CardServicePortType.ChangePinAsync(ERezeptClientSimpleExample.CardService.ChangePinRequest request) {
            return base.Channel.ChangePinAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.ChangePinResponse> ChangePinAsync(ERezeptClientSimpleExample.CardService.ChangePin ChangePin) {
            ERezeptClientSimpleExample.CardService.ChangePinRequest inValue = new ERezeptClientSimpleExample.CardService.ChangePinRequest();
            inValue.ChangePin = ChangePin;
            return ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).ChangePinAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.CardService.UnblockPinResponse ERezeptClientSimpleExample.CardService.CardServicePortType.UnblockPin(ERezeptClientSimpleExample.CardService.UnblockPinRequest request) {
            return base.Channel.UnblockPin(request);
        }
        
        public ERezeptClientSimpleExample.CardService.PinResponseType UnblockPin(ERezeptClientSimpleExample.CardService.UnblockPin UnblockPin1) {
            ERezeptClientSimpleExample.CardService.UnblockPinRequest inValue = new ERezeptClientSimpleExample.CardService.UnblockPinRequest();
            inValue.UnblockPin = UnblockPin1;
            ERezeptClientSimpleExample.CardService.UnblockPinResponse retVal = ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).UnblockPin(inValue);
            return retVal.UnblockPinResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.UnblockPinResponse> ERezeptClientSimpleExample.CardService.CardServicePortType.UnblockPinAsync(ERezeptClientSimpleExample.CardService.UnblockPinRequest request) {
            return base.Channel.UnblockPinAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.UnblockPinResponse> UnblockPinAsync(ERezeptClientSimpleExample.CardService.UnblockPin UnblockPin) {
            ERezeptClientSimpleExample.CardService.UnblockPinRequest inValue = new ERezeptClientSimpleExample.CardService.UnblockPinRequest();
            inValue.UnblockPin = UnblockPin;
            return ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).UnblockPinAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.CardService.GetPinStatusResponse1 ERezeptClientSimpleExample.CardService.CardServicePortType.GetPinStatus(ERezeptClientSimpleExample.CardService.GetPinStatusRequest request) {
            return base.Channel.GetPinStatus(request);
        }
        
        public ERezeptClientSimpleExample.CardService.GetPinStatusResponse GetPinStatus(ERezeptClientSimpleExample.CardService.GetPinStatus GetPinStatus1) {
            ERezeptClientSimpleExample.CardService.GetPinStatusRequest inValue = new ERezeptClientSimpleExample.CardService.GetPinStatusRequest();
            inValue.GetPinStatus = GetPinStatus1;
            ERezeptClientSimpleExample.CardService.GetPinStatusResponse1 retVal = ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).GetPinStatus(inValue);
            return retVal.GetPinStatusResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.GetPinStatusResponse1> ERezeptClientSimpleExample.CardService.CardServicePortType.GetPinStatusAsync(ERezeptClientSimpleExample.CardService.GetPinStatusRequest request) {
            return base.Channel.GetPinStatusAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.GetPinStatusResponse1> GetPinStatusAsync(ERezeptClientSimpleExample.CardService.GetPinStatus GetPinStatus) {
            ERezeptClientSimpleExample.CardService.GetPinStatusRequest inValue = new ERezeptClientSimpleExample.CardService.GetPinStatusRequest();
            inValue.GetPinStatus = GetPinStatus;
            return ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).GetPinStatusAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.CardService.EnablePinResponse ERezeptClientSimpleExample.CardService.CardServicePortType.EnablePin(ERezeptClientSimpleExample.CardService.EnablePinRequest request) {
            return base.Channel.EnablePin(request);
        }
        
        public ERezeptClientSimpleExample.CardService.PinResponseType EnablePin(ERezeptClientSimpleExample.CardService.EnablePin EnablePin1) {
            ERezeptClientSimpleExample.CardService.EnablePinRequest inValue = new ERezeptClientSimpleExample.CardService.EnablePinRequest();
            inValue.EnablePin = EnablePin1;
            ERezeptClientSimpleExample.CardService.EnablePinResponse retVal = ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).EnablePin(inValue);
            return retVal.EnablePinResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.EnablePinResponse> ERezeptClientSimpleExample.CardService.CardServicePortType.EnablePinAsync(ERezeptClientSimpleExample.CardService.EnablePinRequest request) {
            return base.Channel.EnablePinAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.EnablePinResponse> EnablePinAsync(ERezeptClientSimpleExample.CardService.EnablePin EnablePin) {
            ERezeptClientSimpleExample.CardService.EnablePinRequest inValue = new ERezeptClientSimpleExample.CardService.EnablePinRequest();
            inValue.EnablePin = EnablePin;
            return ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).EnablePinAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.CardService.DisablePinResponse ERezeptClientSimpleExample.CardService.CardServicePortType.DisablePin(ERezeptClientSimpleExample.CardService.DisablePinRequest request) {
            return base.Channel.DisablePin(request);
        }
        
        public ERezeptClientSimpleExample.CardService.PinResponseType DisablePin(ERezeptClientSimpleExample.CardService.DisablePin DisablePin1) {
            ERezeptClientSimpleExample.CardService.DisablePinRequest inValue = new ERezeptClientSimpleExample.CardService.DisablePinRequest();
            inValue.DisablePin = DisablePin1;
            ERezeptClientSimpleExample.CardService.DisablePinResponse retVal = ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).DisablePin(inValue);
            return retVal.DisablePinResponse1;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.DisablePinResponse> ERezeptClientSimpleExample.CardService.CardServicePortType.DisablePinAsync(ERezeptClientSimpleExample.CardService.DisablePinRequest request) {
            return base.Channel.DisablePinAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.CardService.DisablePinResponse> DisablePinAsync(ERezeptClientSimpleExample.CardService.DisablePin DisablePin) {
            ERezeptClientSimpleExample.CardService.DisablePinRequest inValue = new ERezeptClientSimpleExample.CardService.DisablePinRequest();
            inValue.DisablePin = DisablePin;
            return ((ERezeptClientSimpleExample.CardService.CardServicePortType)(this)).DisablePinAsync(inValue);
        }
    }
}
