//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERezeptClientSimpleExample.EventService {
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/tel/error/v2.0")]
    public partial class Error : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string messageIDField;
        
        private System.DateTime timestampField;
        
        private ErrorTrace[] traceField;
        
        public Error() {
            this.messageIDField = "";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string MessageID {
            get {
                return this.messageIDField;
            }
            set {
                this.messageIDField = value;
                this.RaisePropertyChanged("MessageID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Trace", Order=2)]
        public ErrorTrace[] Trace {
            get {
                return this.traceField;
            }
            set {
                this.traceField = value;
                this.RaisePropertyChanged("Trace");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/tel/error/v2.0")]
    public partial class ErrorTrace : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string eventIDField;
        
        private string instanceField;
        
        private string logReferenceField;
        
        private string compTypeField;
        
        private string codeField;
        
        private string severityField;
        
        private string errorTypeField;
        
        private string errorTextField;
        
        private ErrorTraceDetail detailField;
        
        public ErrorTrace() {
            this.eventIDField = "";
            this.instanceField = "";
            this.logReferenceField = "";
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string EventID {
            get {
                return this.eventIDField;
            }
            set {
                this.eventIDField = value;
                this.RaisePropertyChanged("EventID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string Instance {
            get {
                return this.instanceField;
            }
            set {
                this.instanceField = value;
                this.RaisePropertyChanged("Instance");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public string LogReference {
            get {
                return this.logReferenceField;
            }
            set {
                this.logReferenceField = value;
                this.RaisePropertyChanged("LogReference");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string CompType {
            get {
                return this.compTypeField;
            }
            set {
                this.compTypeField = value;
                this.RaisePropertyChanged("CompType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="integer", Order=4)]
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
                this.RaisePropertyChanged("Code");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public string Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
                this.RaisePropertyChanged("Severity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public string ErrorType {
            get {
                return this.errorTypeField;
            }
            set {
                this.errorTypeField = value;
                this.RaisePropertyChanged("ErrorType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string ErrorText {
            get {
                return this.errorTextField;
            }
            set {
                this.errorTextField = value;
                this.RaisePropertyChanged("ErrorText");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public ErrorTraceDetail Detail {
            get {
                return this.detailField;
            }
            set {
                this.detailField = value;
                this.RaisePropertyChanged("Detail");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/tel/error/v2.0")]
    public partial class ErrorTraceDetail : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string encodingField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute()]
        public string Encoding {
            get {
                return this.encodingField;
            }
            set {
                this.encodingField = value;
                this.RaisePropertyChanged("Encoding");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlTextAttribute()]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class SubscriptionType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subscriptionIDField;
        
        private System.DateTime terminationTimeField;
        
        private bool terminationTimeFieldSpecified;
        
        private string eventToField;
        
        private string topicField;
        
        private string filterField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("SubscriptionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime TerminationTime {
            get {
                return this.terminationTimeField;
            }
            set {
                this.terminationTimeField = value;
                this.RaisePropertyChanged("TerminationTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool TerminationTimeSpecified {
            get {
                return this.terminationTimeFieldSpecified;
            }
            set {
                this.terminationTimeFieldSpecified = value;
                this.RaisePropertyChanged("TerminationTimeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="anyURI", Order=2)]
        public string EventTo {
            get {
                return this.eventToField;
            }
            set {
                this.eventToField = value;
                this.RaisePropertyChanged("EventTo");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Topic {
            get {
                return this.topicField;
            }
            set {
                this.topicField = value;
                this.RaisePropertyChanged("Topic");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public string Filter {
            get {
                return this.filterField;
            }
            set {
                this.filterField = value;
                this.RaisePropertyChanged("Filter");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0")]
    public partial class ContextType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string mandantIdField;
        
        private string clientSystemIdField;
        
        private string workplaceIdField;
        
        private string userIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public string MandantId {
            get {
                return this.mandantIdField;
            }
            set {
                this.mandantIdField = value;
                this.RaisePropertyChanged("MandantId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=1)]
        public string ClientSystemId {
            get {
                return this.clientSystemIdField;
            }
            set {
                this.clientSystemIdField = value;
                this.RaisePropertyChanged("ClientSystemId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=2)]
        public string WorkplaceId {
            get {
                return this.workplaceIdField;
            }
            set {
                this.workplaceIdField = value;
                this.RaisePropertyChanged("WorkplaceId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=3)]
        public string UserId {
            get {
                return this.userIdField;
            }
            set {
                this.userIdField = value;
                this.RaisePropertyChanged("UserId");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://ws.gematik.de/conn/EventService/WSDL/v7.2", ConfigurationName="EventService.EventServicePortType")]
    public interface EventServicePortType {
        
        // CODEGEN: Generating message contract since the operation Subscribe is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#Subscribe", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.EventService.Error), Action="http://ws.gematik.de/conn/EventService/v7.2#Subscribe", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.EventService.SubscribeResponse1 Subscribe(ERezeptClientSimpleExample.EventService.SubscribeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#Subscribe", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.SubscribeResponse1> SubscribeAsync(ERezeptClientSimpleExample.EventService.SubscribeRequest request);
        
        // CODEGEN: Generating message contract since the operation Unsubscribe is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#Unsubscribe", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.EventService.Error), Action="http://ws.gematik.de/conn/EventService/v7.2#Unsubscribe", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.EventService.UnsubscribeResponse1 Unsubscribe(ERezeptClientSimpleExample.EventService.UnsubscribeRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#Unsubscribe", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.UnsubscribeResponse1> UnsubscribeAsync(ERezeptClientSimpleExample.EventService.UnsubscribeRequest request);
        
        // CODEGEN: Generating message contract since the operation GetSubscription is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#GetSubscription", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.EventService.Error), Action="http://ws.gematik.de/conn/EventService/v7.2#GetSubscription", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.EventService.GetSubscriptionResponse1 GetSubscription(ERezeptClientSimpleExample.EventService.GetSubscriptionRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#GetSubscription", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetSubscriptionResponse1> GetSubscriptionAsync(ERezeptClientSimpleExample.EventService.GetSubscriptionRequest request);
        
        // CODEGEN: Generating message contract since the operation GetResourceInformation is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#GetResourceInformation", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.EventService.Error), Action="http://ws.gematik.de/conn/EventService/v7.2#GetResourceInformation", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.EventService.GetResourceInformationResponse1 GetResourceInformation(ERezeptClientSimpleExample.EventService.GetResourceInformationRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#GetResourceInformation", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetResourceInformationResponse1> GetResourceInformationAsync(ERezeptClientSimpleExample.EventService.GetResourceInformationRequest request);
        
        // CODEGEN: Generating message contract since the operation GetCardTerminals is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#GetCardTerminals", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.EventService.Error), Action="http://ws.gematik.de/conn/EventService/v7.2#GetCardTerminals", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse1 GetCardTerminals(ERezeptClientSimpleExample.EventService.GetCardTerminalsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#GetCardTerminals", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse1> GetCardTerminalsAsync(ERezeptClientSimpleExample.EventService.GetCardTerminalsRequest request);
        
        // CODEGEN: Generating message contract since the operation GetCards is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#GetCards", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.EventService.Error), Action="http://ws.gematik.de/conn/EventService/v7.2#GetCards", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.EventService.GetCardsResponse1 GetCards(ERezeptClientSimpleExample.EventService.GetCardsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#GetCards", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetCardsResponse1> GetCardsAsync(ERezeptClientSimpleExample.EventService.GetCardsRequest request);
        
        // CODEGEN: Generating message contract since the operation RenewSubscriptions is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#RenewSubscriptions", ReplyAction="*")]
        [System.ServiceModel.FaultContractAttribute(typeof(ERezeptClientSimpleExample.EventService.Error), Action="http://ws.gematik.de/conn/EventService/v7.2#RenewSubscriptions", Name="Error", Namespace="http://ws.gematik.de/tel/error/v2.0")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse1 RenewSubscriptions(ERezeptClientSimpleExample.EventService.RenewSubscriptionsRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://ws.gematik.de/conn/EventService/v7.2#RenewSubscriptions", ReplyAction="*")]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse1> RenewSubscriptionsAsync(ERezeptClientSimpleExample.EventService.RenewSubscriptionsRequest request);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class Subscribe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private SubscriptionType subscriptionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public SubscriptionType Subscription {
            get {
                return this.subscriptionField;
            }
            set {
                this.subscriptionField = value;
                this.RaisePropertyChanged("Subscription");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class SubscribeResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private string subscriptionIDField;
        
        private System.DateTime terminationTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("SubscriptionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public System.DateTime TerminationTime {
            get {
                return this.terminationTimeField;
            }
            set {
                this.terminationTimeField = value;
                this.RaisePropertyChanged("TerminationTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public partial class Status : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Result resultField;
        
        private Error errorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public Result Result {
            get {
                return this.resultField;
            }
            set {
                this.resultField = value;
                this.RaisePropertyChanged("Result");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/tel/error/v2.0", Order=1)]
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public enum Result {
        
        /// <remarks/>
        OK,
        
        /// <remarks/>
        Warning,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SubscribeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.Subscribe Subscribe;
        
        public SubscribeRequest() {
        }
        
        public SubscribeRequest(ERezeptClientSimpleExample.EventService.Subscribe Subscribe) {
            this.Subscribe = Subscribe;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class SubscribeResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.SubscribeResponse SubscribeResponse;
        
        public SubscribeResponse1() {
        }
        
        public SubscribeResponse1(ERezeptClientSimpleExample.EventService.SubscribeResponse SubscribeResponse) {
            this.SubscribeResponse = SubscribeResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class Unsubscribe : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string itemField;
        
        private ItemChoiceType itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("EventTo", typeof(string), DataType="anyURI", Order=1)]
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionID", typeof(string), Order=1)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
                this.RaisePropertyChanged("ItemElementName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", IncludeInSchema=false)]
    public enum ItemChoiceType {
        
        /// <remarks/>
        EventTo,
        
        /// <remarks/>
        SubscriptionID,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class UnsubscribeResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnsubscribeRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.Unsubscribe Unsubscribe;
        
        public UnsubscribeRequest() {
        }
        
        public UnsubscribeRequest(ERezeptClientSimpleExample.EventService.Unsubscribe Unsubscribe) {
            this.Unsubscribe = Unsubscribe;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UnsubscribeResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.UnsubscribeResponse UnsubscribeResponse;
        
        public UnsubscribeResponse1() {
        }
        
        public UnsubscribeResponse1(ERezeptClientSimpleExample.EventService.UnsubscribeResponse UnsubscribeResponse) {
            this.UnsubscribeResponse = UnsubscribeResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class GetSubscription : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string subscriptionIDField;
        
        private bool mandantwideField;
        
        public GetSubscription() {
            this.mandantwideField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("SubscriptionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("mandant-wide")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool mandantwide {
            get {
                return this.mandantwideField;
            }
            set {
                this.mandantwideField = value;
                this.RaisePropertyChanged("mandantwide");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class GetSubscriptionResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private SubscriptionType[] subscriptionsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Subscription", IsNullable=false)]
        public SubscriptionType[] Subscriptions {
            get {
                return this.subscriptionsField;
            }
            set {
                this.subscriptionsField = value;
                this.RaisePropertyChanged("Subscriptions");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSubscriptionRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.GetSubscription GetSubscription;
        
        public GetSubscriptionRequest() {
        }
        
        public GetSubscriptionRequest(ERezeptClientSimpleExample.EventService.GetSubscription GetSubscription) {
            this.GetSubscription = GetSubscription;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetSubscriptionResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.GetSubscriptionResponse GetSubscriptionResponse;
        
        public GetSubscriptionResponse1() {
        }
        
        public GetSubscriptionResponse1(ERezeptClientSimpleExample.EventService.GetSubscriptionResponse GetSubscriptionResponse) {
            this.GetSubscriptionResponse = GetSubscriptionResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class GetResourceInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string ctIdField;
        
        private string slotIdField;
        
        private string iccsnField;
        
        private string cardHandleField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=1)]
        public string CtId {
            get {
                return this.ctIdField;
            }
            set {
                this.ctIdField = value;
                this.RaisePropertyChanged("CtId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", DataType="positiveInteger", Order=2)]
        public string SlotId {
            get {
                return this.slotIdField;
            }
            set {
                this.slotIdField = value;
                this.RaisePropertyChanged("SlotId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=3)]
        public string Iccsn {
            get {
                return this.iccsnField;
            }
            set {
                this.iccsnField = value;
                this.RaisePropertyChanged("Iccsn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=4)]
        public string CardHandle {
            get {
                return this.cardHandleField;
            }
            set {
                this.cardHandleField = value;
                this.RaisePropertyChanged("CardHandle");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class GetResourceInformationResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private CardInfoType cardField;
        
        private CardTerminalInfoType cardTerminalField;
        
        private Connector connectorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=1)]
        public CardInfoType Card {
            get {
                return this.cardField;
            }
            set {
                this.cardField = value;
                this.RaisePropertyChanged("Card");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardTerminalInfo/v8.0", Order=2)]
        public CardTerminalInfoType CardTerminal {
            get {
                return this.cardTerminalField;
            }
            set {
                this.cardTerminalField = value;
                this.RaisePropertyChanged("CardTerminal");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=3)]
        public Connector Connector {
            get {
                return this.connectorField;
            }
            set {
                this.connectorField = value;
                this.RaisePropertyChanged("Connector");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(CardInfoErrType))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class CardInfoType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string cardHandleField;
        
        private CardTypeType cardTypeField;
        
        private CardInfoTypeCardVersion cardVersionField;
        
        private string iccsnField;
        
        private string ctIdField;
        
        private string slotIdField;
        
        private System.DateTime insertTimeField;
        
        private string cardHolderNameField;
        
        private string kvnrField;
        
        private System.DateTime certificateExpirationDateField;
        
        private bool certificateExpirationDateFieldSpecified;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public string CardHandle {
            get {
                return this.cardHandleField;
            }
            set {
                this.cardHandleField = value;
                this.RaisePropertyChanged("CardHandle");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=1)]
        public CardTypeType CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
                this.RaisePropertyChanged("CardType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public CardInfoTypeCardVersion CardVersion {
            get {
                return this.cardVersionField;
            }
            set {
                this.cardVersionField = value;
                this.RaisePropertyChanged("CardVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=3)]
        public string Iccsn {
            get {
                return this.iccsnField;
            }
            set {
                this.iccsnField = value;
                this.RaisePropertyChanged("Iccsn");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=4)]
        public string CtId {
            get {
                return this.ctIdField;
            }
            set {
                this.ctIdField = value;
                this.RaisePropertyChanged("CtId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", DataType="positiveInteger", Order=5)]
        public string SlotId {
            get {
                return this.slotIdField;
            }
            set {
                this.slotIdField = value;
                this.RaisePropertyChanged("SlotId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public System.DateTime InsertTime {
            get {
                return this.insertTimeField;
            }
            set {
                this.insertTimeField = value;
                this.RaisePropertyChanged("InsertTime");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public string CardHolderName {
            get {
                return this.cardHolderNameField;
            }
            set {
                this.cardHolderNameField = value;
                this.RaisePropertyChanged("CardHolderName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public string Kvnr {
            get {
                return this.kvnrField;
            }
            set {
                this.kvnrField = value;
                this.RaisePropertyChanged("Kvnr");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date", Order=9)]
        public System.DateTime CertificateExpirationDate {
            get {
                return this.certificateExpirationDateField;
            }
            set {
                this.certificateExpirationDateField = value;
                this.RaisePropertyChanged("CertificateExpirationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CertificateExpirationDateSpecified {
            get {
                return this.certificateExpirationDateFieldSpecified;
            }
            set {
                this.certificateExpirationDateFieldSpecified = value;
                this.RaisePropertyChanged("CertificateExpirationDateSpecified");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0")]
    public enum CardTypeType {
        
        /// <remarks/>
        EGK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HBA-qSig")]
        HBAqSig,
        
        /// <remarks/>
        HBA,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SMC-B")]
        SMCB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("HSM-B")]
        HSMB,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SMC-KT")]
        SMCKT,
        
        /// <remarks/>
        KVK,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("ZOD_2.0")]
        ZOD_20,
        
        /// <remarks/>
        UNKNOWN,
        
        /// <remarks/>
        HBAx,
        
        /// <remarks/>
        [System.Xml.Serialization.XmlEnumAttribute("SM-B")]
        SMB,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class CardInfoTypeCardVersion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private VersionInfoType cOSVersionField;
        
        private VersionInfoType objectSystemVersionField;
        
        private VersionInfoType cardPTPersVersionField;
        
        private VersionInfoType dataStructureVersionField;
        
        private VersionInfoType loggingVersionField;
        
        private VersionInfoType aTRVersionField;
        
        private VersionInfoType gDOVersionField;
        
        private VersionInfoType keyInfoVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public VersionInfoType COSVersion {
            get {
                return this.cOSVersionField;
            }
            set {
                this.cOSVersionField = value;
                this.RaisePropertyChanged("COSVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public VersionInfoType ObjectSystemVersion {
            get {
                return this.objectSystemVersionField;
            }
            set {
                this.objectSystemVersionField = value;
                this.RaisePropertyChanged("ObjectSystemVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public VersionInfoType CardPTPersVersion {
            get {
                return this.cardPTPersVersionField;
            }
            set {
                this.cardPTPersVersionField = value;
                this.RaisePropertyChanged("CardPTPersVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public VersionInfoType DataStructureVersion {
            get {
                return this.dataStructureVersionField;
            }
            set {
                this.dataStructureVersionField = value;
                this.RaisePropertyChanged("DataStructureVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public VersionInfoType LoggingVersion {
            get {
                return this.loggingVersionField;
            }
            set {
                this.loggingVersionField = value;
                this.RaisePropertyChanged("LoggingVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public VersionInfoType ATRVersion {
            get {
                return this.aTRVersionField;
            }
            set {
                this.aTRVersionField = value;
                this.RaisePropertyChanged("ATRVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=6)]
        public VersionInfoType GDOVersion {
            get {
                return this.gDOVersionField;
            }
            set {
                this.gDOVersionField = value;
                this.RaisePropertyChanged("GDOVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public VersionInfoType KeyInfoVersion {
            get {
                return this.keyInfoVersionField;
            }
            set {
                this.keyInfoVersionField = value;
                this.RaisePropertyChanged("KeyInfoVersion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class VersionInfoType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ushort majorField;
        
        private ushort minorField;
        
        private ushort revisionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ushort Major {
            get {
                return this.majorField;
            }
            set {
                this.majorField = value;
                this.RaisePropertyChanged("Major");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ushort Minor {
            get {
                return this.minorField;
            }
            set {
                this.minorField = value;
                this.RaisePropertyChanged("Minor");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ushort Revision {
            get {
                return this.revisionField;
            }
            set {
                this.revisionField = value;
                this.RaisePropertyChanged("Revision");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1")]
    public partial class CardInfoErrType : CardInfoType {
        
        private Error errorField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/tel/error/v2.0", Order=0)]
        public Error Error {
            get {
                return this.errorField;
            }
            set {
                this.errorField = value;
                this.RaisePropertyChanged("Error");
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardTerminalInfo/v8.0")]
    public partial class CardTerminalInfoType : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ProductInformation productInformationField;
        
        private string ctIdField;
        
        private string[] workplaceIdsField;
        
        private string nameField;
        
        private string macAddressField;
        
        private CardTerminalInfoTypeIPAddress iPAddressField;
        
        private string slotsField;
        
        private bool iS_PHYSICALField;
        
        private bool connectedField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/int/version/ProductInformation/v1.1", Order=0)]
        public ProductInformation ProductInformation {
            get {
                return this.productInformationField;
            }
            set {
                this.productInformationField = value;
                this.RaisePropertyChanged("ProductInformation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=1)]
        public string CtId {
            get {
                return this.ctIdField;
            }
            set {
                this.ctIdField = value;
                this.RaisePropertyChanged("CtId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=2)]
        [System.Xml.Serialization.XmlArrayItemAttribute("WorkplaceId", IsNullable=false)]
        public string[] WorkplaceIds {
            get {
                return this.workplaceIdsField;
            }
            set {
                this.workplaceIdsField = value;
                this.RaisePropertyChanged("WorkplaceIds");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
                this.RaisePropertyChanged("Name");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="token", Order=4)]
        public string MacAddress {
            get {
                return this.macAddressField;
            }
            set {
                this.macAddressField = value;
                this.RaisePropertyChanged("MacAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=5)]
        public CardTerminalInfoTypeIPAddress IPAddress {
            get {
                return this.iPAddressField;
            }
            set {
                this.iPAddressField = value;
                this.RaisePropertyChanged("IPAddress");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="nonNegativeInteger", Order=6)]
        public string Slots {
            get {
                return this.slotsField;
            }
            set {
                this.slotsField = value;
                this.RaisePropertyChanged("Slots");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=7)]
        public bool IS_PHYSICAL {
            get {
                return this.iS_PHYSICALField;
            }
            set {
                this.iS_PHYSICALField = value;
                this.RaisePropertyChanged("IS_PHYSICAL");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=8)]
        public bool Connected {
            get {
                return this.connectedField;
            }
            set {
                this.connectedField = value;
                this.RaisePropertyChanged("Connected");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/int/version/ProductInformation/v1.1")]
    public partial class ProductInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private System.DateTime informationDateField;
        
        private ProductTypeInformation productTypeInformationField;
        
        private ProductIdentification productIdentificationField;
        
        private ProductMiscellaneous productMiscellaneousField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public System.DateTime InformationDate {
            get {
                return this.informationDateField;
            }
            set {
                this.informationDateField = value;
                this.RaisePropertyChanged("InformationDate");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ProductTypeInformation ProductTypeInformation {
            get {
                return this.productTypeInformationField;
            }
            set {
                this.productTypeInformationField = value;
                this.RaisePropertyChanged("ProductTypeInformation");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ProductIdentification ProductIdentification {
            get {
                return this.productIdentificationField;
            }
            set {
                this.productIdentificationField = value;
                this.RaisePropertyChanged("ProductIdentification");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public ProductMiscellaneous ProductMiscellaneous {
            get {
                return this.productMiscellaneousField;
            }
            set {
                this.productMiscellaneousField = value;
                this.RaisePropertyChanged("ProductMiscellaneous");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/int/version/ProductInformation/v1.1")]
    public partial class ProductTypeInformation : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string productTypeField;
        
        private string productTypeVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProductType {
            get {
                return this.productTypeField;
            }
            set {
                this.productTypeField = value;
                this.RaisePropertyChanged("ProductType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ProductTypeVersion {
            get {
                return this.productTypeVersionField;
            }
            set {
                this.productTypeVersionField = value;
                this.RaisePropertyChanged("ProductTypeVersion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/int/version/ProductInformation/v1.1")]
    public partial class ProductIdentification : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string productVendorIDField;
        
        private string productCodeField;
        
        private ProductVersion productVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProductVendorID {
            get {
                return this.productVendorIDField;
            }
            set {
                this.productVendorIDField = value;
                this.RaisePropertyChanged("ProductVendorID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ProductCode {
            get {
                return this.productCodeField;
            }
            set {
                this.productCodeField = value;
                this.RaisePropertyChanged("ProductCode");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ProductVersion ProductVersion {
            get {
                return this.productVersionField;
            }
            set {
                this.productVersionField = value;
                this.RaisePropertyChanged("ProductVersion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/int/version/ProductInformation/v1.1")]
    public partial class ProductVersion : object, System.ComponentModel.INotifyPropertyChanged {
        
        private object itemField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("Central", typeof(string), Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("Local", typeof(ProductVersionLocal), Order=0)]
        public object Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/int/version/ProductInformation/v1.1")]
    public partial class ProductVersionLocal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string hWVersionField;
        
        private string fWVersionField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string HWVersion {
            get {
                return this.hWVersionField;
            }
            set {
                this.hWVersionField = value;
                this.RaisePropertyChanged("HWVersion");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string FWVersion {
            get {
                return this.fWVersionField;
            }
            set {
                this.fWVersionField = value;
                this.RaisePropertyChanged("FWVersion");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/int/version/ProductInformation/v1.1")]
    public partial class ProductMiscellaneous : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string productVendorNameField;
        
        private string productNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ProductVendorName {
            get {
                return this.productVendorNameField;
            }
            set {
                this.productVendorNameField = value;
                this.RaisePropertyChanged("ProductVendorName");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public string ProductName {
            get {
                return this.productNameField;
            }
            set {
                this.productNameField = value;
                this.RaisePropertyChanged("ProductName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/CardTerminalInfo/v8.0")]
    public partial class CardTerminalInfoTypeIPAddress : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string itemField;
        
        private ItemChoiceType1 itemElementNameField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("IPV4Address", typeof(string), DataType="token", Order=0)]
        [System.Xml.Serialization.XmlElementAttribute("IPV6Address", typeof(string), DataType="token", Order=0)]
        [System.Xml.Serialization.XmlChoiceIdentifierAttribute("ItemElementName")]
        public string Item {
            get {
                return this.itemField;
            }
            set {
                this.itemField = value;
                this.RaisePropertyChanged("Item");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public ItemChoiceType1 ItemElementName {
            get {
                return this.itemElementNameField;
            }
            set {
                this.itemElementNameField = value;
                this.RaisePropertyChanged("ItemElementName");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://ws.gematik.de/conn/CardTerminalInfo/v8.0", IncludeInSchema=false)]
    public enum ItemChoiceType1 {
        
        /// <remarks/>
        IPV4Address,
        
        /// <remarks/>
        IPV6Address,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public partial class Connector : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ConnectorVPNTIStatus vPNTIStatusField;
        
        private ConnectorVPNSISStatus vPNSISStatusField;
        
        private OperatingState operatingStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ConnectorVPNTIStatus VPNTIStatus {
            get {
                return this.vPNTIStatusField;
            }
            set {
                this.vPNTIStatusField = value;
                this.RaisePropertyChanged("VPNTIStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ConnectorVPNSISStatus VPNSISStatus {
            get {
                return this.vPNSISStatusField;
            }
            set {
                this.vPNSISStatusField = value;
                this.RaisePropertyChanged("VPNSISStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public OperatingState OperatingState {
            get {
                return this.operatingStateField;
            }
            set {
                this.operatingStateField = value;
                this.RaisePropertyChanged("OperatingState");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public partial class ConnectorVPNTIStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ConnectorVPNTIStatusConnectionStatus connectionStatusField;
        
        private System.DateTime timestampField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ConnectorVPNTIStatusConnectionStatus ConnectionStatus {
            get {
                return this.connectionStatusField;
            }
            set {
                this.connectionStatusField = value;
                this.RaisePropertyChanged("ConnectionStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public enum ConnectorVPNTIStatusConnectionStatus {
        
        /// <remarks/>
        Online,
        
        /// <remarks/>
        Offline,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public partial class ConnectorVPNSISStatus : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ConnectorVPNSISStatusConnectionStatus connectionStatusField;
        
        private System.DateTime timestampField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public ConnectorVPNSISStatusConnectionStatus ConnectionStatus {
            get {
                return this.connectionStatusField;
            }
            set {
                this.connectionStatusField = value;
                this.RaisePropertyChanged("ConnectionStatus");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime Timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
                this.RaisePropertyChanged("Timestamp");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public enum ConnectorVPNSISStatusConnectionStatus {
        
        /// <remarks/>
        Online,
        
        /// <remarks/>
        Offline,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public partial class OperatingState : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ErrorState[] errorStateField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("ErrorState", Order=0)]
        public ErrorState[] ErrorState {
            get {
                return this.errorStateField;
            }
            set {
                this.errorStateField = value;
                this.RaisePropertyChanged("ErrorState");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public partial class ErrorState : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string errorConditionField;
        
        private ErrorStateSeverity severityField;
        
        private ErrorStateType typeField;
        
        private bool valueField;
        
        private System.DateTime validFromField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string ErrorCondition {
            get {
                return this.errorConditionField;
            }
            set {
                this.errorConditionField = value;
                this.RaisePropertyChanged("ErrorCondition");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public ErrorStateSeverity Severity {
            get {
                return this.severityField;
            }
            set {
                this.severityField = value;
                this.RaisePropertyChanged("Severity");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=2)]
        public ErrorStateType Type {
            get {
                return this.typeField;
            }
            set {
                this.typeField = value;
                this.RaisePropertyChanged("Type");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=3)]
        public bool Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
                this.RaisePropertyChanged("Value");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=4)]
        public System.DateTime ValidFrom {
            get {
                return this.validFromField;
            }
            set {
                this.validFromField = value;
                this.RaisePropertyChanged("ValidFrom");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public enum ErrorStateSeverity {
        
        /// <remarks/>
        Fatal,
        
        /// <remarks/>
        Error,
        
        /// <remarks/>
        Warning,
        
        /// <remarks/>
        Info,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0")]
    public enum ErrorStateType {
        
        /// <remarks/>
        Operation,
        
        /// <remarks/>
        Security,
        
        /// <remarks/>
        Infrastructure,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetResourceInformationRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.GetResourceInformation GetResourceInformation;
        
        public GetResourceInformationRequest() {
        }
        
        public GetResourceInformationRequest(ERezeptClientSimpleExample.EventService.GetResourceInformation GetResourceInformation) {
            this.GetResourceInformation = GetResourceInformation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetResourceInformationResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.GetResourceInformationResponse GetResourceInformationResponse;
        
        public GetResourceInformationResponse1() {
        }
        
        public GetResourceInformationResponse1(ERezeptClientSimpleExample.EventService.GetResourceInformationResponse GetResourceInformationResponse) {
            this.GetResourceInformationResponse = GetResourceInformationResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class GetCardTerminals : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private bool mandantwideField;
        
        public GetCardTerminals() {
            this.mandantwideField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("mandant-wide")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool mandantwide {
            get {
                return this.mandantwideField;
            }
            set {
                this.mandantwideField = value;
                this.RaisePropertyChanged("mandantwide");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class GetCardTerminalsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private CardTerminalInfoType[] cardTerminalsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Namespace="http://ws.gematik.de/conn/CardTerminalInfo/v8.0", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("CardTerminal", IsNullable=false)]
        public CardTerminalInfoType[] CardTerminals {
            get {
                return this.cardTerminalsField;
            }
            set {
                this.cardTerminalsField = value;
                this.RaisePropertyChanged("CardTerminals");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCardTerminalsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.GetCardTerminals GetCardTerminals;
        
        public GetCardTerminalsRequest() {
        }
        
        public GetCardTerminalsRequest(ERezeptClientSimpleExample.EventService.GetCardTerminals GetCardTerminals) {
            this.GetCardTerminals = GetCardTerminals;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCardTerminalsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse GetCardTerminalsResponse;
        
        public GetCardTerminalsResponse1() {
        }
        
        public GetCardTerminalsResponse1(ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse GetCardTerminalsResponse) {
            this.GetCardTerminalsResponse = GetCardTerminalsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class GetCards : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string ctIdField;
        
        private string slotIdField;
        
        private CardTypeType cardTypeField;
        
        private bool cardTypeFieldSpecified;
        
        private bool mandantwideField;
        
        public GetCards() {
            this.mandantwideField = false;
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=1)]
        public string CtId {
            get {
                return this.ctIdField;
            }
            set {
                this.ctIdField = value;
                this.RaisePropertyChanged("CtId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", DataType="positiveInteger", Order=2)]
        public string SlotId {
            get {
                return this.slotIdField;
            }
            set {
                this.slotIdField = value;
                this.RaisePropertyChanged("SlotId");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/CardServiceCommon/v2.0", Order=3)]
        public CardTypeType CardType {
            get {
                return this.cardTypeField;
            }
            set {
                this.cardTypeField = value;
                this.RaisePropertyChanged("CardType");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool CardTypeSpecified {
            get {
                return this.cardTypeFieldSpecified;
            }
            set {
                this.cardTypeFieldSpecified = value;
                this.RaisePropertyChanged("CardTypeSpecified");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAttributeAttribute("mandant-wide")]
        [System.ComponentModel.DefaultValueAttribute(false)]
        public bool mandantwide {
            get {
                return this.mandantwideField;
            }
            set {
                this.mandantwideField = value;
                this.RaisePropertyChanged("mandantwide");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class GetCardsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private CardInfoType[] cardsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Namespace="http://ws.gematik.de/conn/CardService/v8.1", Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("Card", IsNullable=false)]
        public CardInfoType[] Cards {
            get {
                return this.cardsField;
            }
            set {
                this.cardsField = value;
                this.RaisePropertyChanged("Cards");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCardsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.GetCards GetCards;
        
        public GetCardsRequest() {
        }
        
        public GetCardsRequest(ERezeptClientSimpleExample.EventService.GetCards GetCards) {
            this.GetCards = GetCards;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetCardsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.GetCardsResponse GetCardsResponse;
        
        public GetCardsResponse1() {
        }
        
        public GetCardsResponse1(ERezeptClientSimpleExample.EventService.GetCardsResponse GetCardsResponse) {
            this.GetCardsResponse = GetCardsResponse;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class RenewSubscriptions : object, System.ComponentModel.INotifyPropertyChanged {
        
        private ContextType contextField;
        
        private string[] subscriptionIDField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorContext/v2.0", Order=0)]
        public ContextType Context {
            get {
                return this.contextField;
            }
            set {
                this.contextField = value;
                this.RaisePropertyChanged("Context");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute("SubscriptionID", Order=1)]
        public string[] SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("SubscriptionID");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class RenewSubscriptionsResponse : object, System.ComponentModel.INotifyPropertyChanged {
        
        private Status statusField;
        
        private SubscriptionRenewal[] subscribeRenewalsField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Namespace="http://ws.gematik.de/conn/ConnectorCommon/v5.0", Order=0)]
        public Status Status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
                this.RaisePropertyChanged("Status");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(Order=1)]
        [System.Xml.Serialization.XmlArrayItemAttribute("SubscriptionRenewal", IsNullable=false)]
        public SubscriptionRenewal[] SubscribeRenewals {
            get {
                return this.subscribeRenewalsField;
            }
            set {
                this.subscribeRenewalsField = value;
                this.RaisePropertyChanged("SubscribeRenewals");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://ws.gematik.de/conn/EventService/v7.2")]
    public partial class SubscriptionRenewal : object, System.ComponentModel.INotifyPropertyChanged {
        
        private string subscriptionIDField;
        
        private System.DateTime terminationTimeField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=0)]
        public string SubscriptionID {
            get {
                return this.subscriptionIDField;
            }
            set {
                this.subscriptionIDField = value;
                this.RaisePropertyChanged("SubscriptionID");
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(Order=1)]
        public System.DateTime TerminationTime {
            get {
                return this.terminationTimeField;
            }
            set {
                this.terminationTimeField = value;
                this.RaisePropertyChanged("TerminationTime");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenewSubscriptionsRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.RenewSubscriptions RenewSubscriptions;
        
        public RenewSubscriptionsRequest() {
        }
        
        public RenewSubscriptionsRequest(ERezeptClientSimpleExample.EventService.RenewSubscriptions RenewSubscriptions) {
            this.RenewSubscriptions = RenewSubscriptions;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class RenewSubscriptionsResponse1 {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://ws.gematik.de/conn/EventService/v7.2", Order=0)]
        public ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse RenewSubscriptionsResponse;
        
        public RenewSubscriptionsResponse1() {
        }
        
        public RenewSubscriptionsResponse1(ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse RenewSubscriptionsResponse) {
            this.RenewSubscriptionsResponse = RenewSubscriptionsResponse;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EventServicePortTypeChannel : ERezeptClientSimpleExample.EventService.EventServicePortType, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventServicePortTypeClient : System.ServiceModel.ClientBase<ERezeptClientSimpleExample.EventService.EventServicePortType>, ERezeptClientSimpleExample.EventService.EventServicePortType {
        
        public EventServicePortTypeClient() {
        }
        
        public EventServicePortTypeClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventServicePortTypeClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServicePortTypeClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventServicePortTypeClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.EventService.SubscribeResponse1 ERezeptClientSimpleExample.EventService.EventServicePortType.Subscribe(ERezeptClientSimpleExample.EventService.SubscribeRequest request) {
            return base.Channel.Subscribe(request);
        }
        
        public ERezeptClientSimpleExample.EventService.SubscribeResponse Subscribe(ERezeptClientSimpleExample.EventService.Subscribe Subscribe1) {
            ERezeptClientSimpleExample.EventService.SubscribeRequest inValue = new ERezeptClientSimpleExample.EventService.SubscribeRequest();
            inValue.Subscribe = Subscribe1;
            ERezeptClientSimpleExample.EventService.SubscribeResponse1 retVal = ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).Subscribe(inValue);
            return retVal.SubscribeResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.SubscribeResponse1> ERezeptClientSimpleExample.EventService.EventServicePortType.SubscribeAsync(ERezeptClientSimpleExample.EventService.SubscribeRequest request) {
            return base.Channel.SubscribeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.SubscribeResponse1> SubscribeAsync(ERezeptClientSimpleExample.EventService.Subscribe Subscribe) {
            ERezeptClientSimpleExample.EventService.SubscribeRequest inValue = new ERezeptClientSimpleExample.EventService.SubscribeRequest();
            inValue.Subscribe = Subscribe;
            return ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).SubscribeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.EventService.UnsubscribeResponse1 ERezeptClientSimpleExample.EventService.EventServicePortType.Unsubscribe(ERezeptClientSimpleExample.EventService.UnsubscribeRequest request) {
            return base.Channel.Unsubscribe(request);
        }
        
        public ERezeptClientSimpleExample.EventService.UnsubscribeResponse Unsubscribe(ERezeptClientSimpleExample.EventService.Unsubscribe Unsubscribe1) {
            ERezeptClientSimpleExample.EventService.UnsubscribeRequest inValue = new ERezeptClientSimpleExample.EventService.UnsubscribeRequest();
            inValue.Unsubscribe = Unsubscribe1;
            ERezeptClientSimpleExample.EventService.UnsubscribeResponse1 retVal = ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).Unsubscribe(inValue);
            return retVal.UnsubscribeResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.UnsubscribeResponse1> ERezeptClientSimpleExample.EventService.EventServicePortType.UnsubscribeAsync(ERezeptClientSimpleExample.EventService.UnsubscribeRequest request) {
            return base.Channel.UnsubscribeAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.UnsubscribeResponse1> UnsubscribeAsync(ERezeptClientSimpleExample.EventService.Unsubscribe Unsubscribe) {
            ERezeptClientSimpleExample.EventService.UnsubscribeRequest inValue = new ERezeptClientSimpleExample.EventService.UnsubscribeRequest();
            inValue.Unsubscribe = Unsubscribe;
            return ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).UnsubscribeAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.EventService.GetSubscriptionResponse1 ERezeptClientSimpleExample.EventService.EventServicePortType.GetSubscription(ERezeptClientSimpleExample.EventService.GetSubscriptionRequest request) {
            return base.Channel.GetSubscription(request);
        }
        
        public ERezeptClientSimpleExample.EventService.GetSubscriptionResponse GetSubscription(ERezeptClientSimpleExample.EventService.GetSubscription GetSubscription1) {
            ERezeptClientSimpleExample.EventService.GetSubscriptionRequest inValue = new ERezeptClientSimpleExample.EventService.GetSubscriptionRequest();
            inValue.GetSubscription = GetSubscription1;
            ERezeptClientSimpleExample.EventService.GetSubscriptionResponse1 retVal = ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).GetSubscription(inValue);
            return retVal.GetSubscriptionResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetSubscriptionResponse1> ERezeptClientSimpleExample.EventService.EventServicePortType.GetSubscriptionAsync(ERezeptClientSimpleExample.EventService.GetSubscriptionRequest request) {
            return base.Channel.GetSubscriptionAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetSubscriptionResponse1> GetSubscriptionAsync(ERezeptClientSimpleExample.EventService.GetSubscription GetSubscription) {
            ERezeptClientSimpleExample.EventService.GetSubscriptionRequest inValue = new ERezeptClientSimpleExample.EventService.GetSubscriptionRequest();
            inValue.GetSubscription = GetSubscription;
            return ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).GetSubscriptionAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.EventService.GetResourceInformationResponse1 ERezeptClientSimpleExample.EventService.EventServicePortType.GetResourceInformation(ERezeptClientSimpleExample.EventService.GetResourceInformationRequest request) {
            return base.Channel.GetResourceInformation(request);
        }
        
        public ERezeptClientSimpleExample.EventService.GetResourceInformationResponse GetResourceInformation(ERezeptClientSimpleExample.EventService.GetResourceInformation GetResourceInformation1) {
            ERezeptClientSimpleExample.EventService.GetResourceInformationRequest inValue = new ERezeptClientSimpleExample.EventService.GetResourceInformationRequest();
            inValue.GetResourceInformation = GetResourceInformation1;
            ERezeptClientSimpleExample.EventService.GetResourceInformationResponse1 retVal = ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).GetResourceInformation(inValue);
            return retVal.GetResourceInformationResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetResourceInformationResponse1> ERezeptClientSimpleExample.EventService.EventServicePortType.GetResourceInformationAsync(ERezeptClientSimpleExample.EventService.GetResourceInformationRequest request) {
            return base.Channel.GetResourceInformationAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetResourceInformationResponse1> GetResourceInformationAsync(ERezeptClientSimpleExample.EventService.GetResourceInformation GetResourceInformation) {
            ERezeptClientSimpleExample.EventService.GetResourceInformationRequest inValue = new ERezeptClientSimpleExample.EventService.GetResourceInformationRequest();
            inValue.GetResourceInformation = GetResourceInformation;
            return ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).GetResourceInformationAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse1 ERezeptClientSimpleExample.EventService.EventServicePortType.GetCardTerminals(ERezeptClientSimpleExample.EventService.GetCardTerminalsRequest request) {
            return base.Channel.GetCardTerminals(request);
        }
        
        public ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse GetCardTerminals(ERezeptClientSimpleExample.EventService.GetCardTerminals GetCardTerminals1) {
            ERezeptClientSimpleExample.EventService.GetCardTerminalsRequest inValue = new ERezeptClientSimpleExample.EventService.GetCardTerminalsRequest();
            inValue.GetCardTerminals = GetCardTerminals1;
            ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse1 retVal = ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).GetCardTerminals(inValue);
            return retVal.GetCardTerminalsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse1> ERezeptClientSimpleExample.EventService.EventServicePortType.GetCardTerminalsAsync(ERezeptClientSimpleExample.EventService.GetCardTerminalsRequest request) {
            return base.Channel.GetCardTerminalsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetCardTerminalsResponse1> GetCardTerminalsAsync(ERezeptClientSimpleExample.EventService.GetCardTerminals GetCardTerminals) {
            ERezeptClientSimpleExample.EventService.GetCardTerminalsRequest inValue = new ERezeptClientSimpleExample.EventService.GetCardTerminalsRequest();
            inValue.GetCardTerminals = GetCardTerminals;
            return ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).GetCardTerminalsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.EventService.GetCardsResponse1 ERezeptClientSimpleExample.EventService.EventServicePortType.GetCards(ERezeptClientSimpleExample.EventService.GetCardsRequest request) {
            return base.Channel.GetCards(request);
        }
        
        public ERezeptClientSimpleExample.EventService.GetCardsResponse GetCards(ERezeptClientSimpleExample.EventService.GetCards GetCards1) {
            ERezeptClientSimpleExample.EventService.GetCardsRequest inValue = new ERezeptClientSimpleExample.EventService.GetCardsRequest();
            inValue.GetCards = GetCards1;
            ERezeptClientSimpleExample.EventService.GetCardsResponse1 retVal = ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).GetCards(inValue);
            return retVal.GetCardsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetCardsResponse1> ERezeptClientSimpleExample.EventService.EventServicePortType.GetCardsAsync(ERezeptClientSimpleExample.EventService.GetCardsRequest request) {
            return base.Channel.GetCardsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.GetCardsResponse1> GetCardsAsync(ERezeptClientSimpleExample.EventService.GetCards GetCards) {
            ERezeptClientSimpleExample.EventService.GetCardsRequest inValue = new ERezeptClientSimpleExample.EventService.GetCardsRequest();
            inValue.GetCards = GetCards;
            return ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).GetCardsAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse1 ERezeptClientSimpleExample.EventService.EventServicePortType.RenewSubscriptions(ERezeptClientSimpleExample.EventService.RenewSubscriptionsRequest request) {
            return base.Channel.RenewSubscriptions(request);
        }
        
        public ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse RenewSubscriptions(ERezeptClientSimpleExample.EventService.RenewSubscriptions RenewSubscriptions1) {
            ERezeptClientSimpleExample.EventService.RenewSubscriptionsRequest inValue = new ERezeptClientSimpleExample.EventService.RenewSubscriptionsRequest();
            inValue.RenewSubscriptions = RenewSubscriptions1;
            ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse1 retVal = ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).RenewSubscriptions(inValue);
            return retVal.RenewSubscriptionsResponse;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse1> ERezeptClientSimpleExample.EventService.EventServicePortType.RenewSubscriptionsAsync(ERezeptClientSimpleExample.EventService.RenewSubscriptionsRequest request) {
            return base.Channel.RenewSubscriptionsAsync(request);
        }
        
        public System.Threading.Tasks.Task<ERezeptClientSimpleExample.EventService.RenewSubscriptionsResponse1> RenewSubscriptionsAsync(ERezeptClientSimpleExample.EventService.RenewSubscriptions RenewSubscriptions) {
            ERezeptClientSimpleExample.EventService.RenewSubscriptionsRequest inValue = new ERezeptClientSimpleExample.EventService.RenewSubscriptionsRequest();
            inValue.RenewSubscriptions = RenewSubscriptions;
            return ((ERezeptClientSimpleExample.EventService.EventServicePortType)(this)).RenewSubscriptionsAsync(inValue);
        }
    }
}
